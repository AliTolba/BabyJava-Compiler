Terminals unused in grammar

   BREAK
   TRUE
   FALSE
   C_NOT
   C_OR
   C_AND


Grammar

    0 $accept: start $end

    1 start: stmt

    2 stmt: expr2 SEMICOL
    3     | CHAR ID ASSIGN C_VAL SEMICOL
    4     | CONST CHAR ID ASSIGN C_VAL SEMICOL
    5     | ID ASSIGN C_VAL SEMICOL
    6     | ID ASSIGN expr SEMICOL
    7     | INT ID ASSIGN expr SEMICOL
    8     | CONST INT ID ASSIGN expr SEMICOL
    9     | FLOAT ID ASSIGN expr SEMICOL
   10     | CONST FLOAT ID ASSIGN expr SEMICOL
   11     | BOOL ID ASSIGN expr SEMICOL
   12     | CONST BOOL ID ASSIGN expr SEMICOL
   13     | while_stmt stmt
   14     | DOWHILE stmt while_stmt
   15     | switch
   16     | for stmt
   17     | IF BRACKETOPEN expr BRACKETCLOSE stmt
   18     | IF BRACKETOPEN expr BRACKETCLOSE stmt ELSE stmt
   19     | BRACEOPEN stmt_list BRACECLOSE
   20     | BRACEOPEN BRACECLOSE
   21     | SEMICOL

   22 expr2: INT ID SEMICOL
   23      | FLOAT ID SEMICOL
   24      | CHAR ID SEMICOL
   25      | BOOL ID SEMICOL

   26 expr: expr PLUS Term
   27     | expr MINUS Term
   28     | expr AND Term
   29     | NOT Term
   30     | expr XOR Term
   31     | expr NOR Term
   32     | expr OR Term
   33     | expr NAND Term
   34     | expr XNOR Term
   35     | expr GTEQ Term
   36     | expr GT Term
   37     | expr LTEQ Term
   38     | expr LT Term
   39     | expr EQUAL Term
   40     | expr NOTEQUAL Term
   41     | Term

   42 Term: Term MUL Factor
   43     | Term DIVIDED Factor
   44     | Factor

   45 Factor: ID
   46       | BRACKETOPEN expr BRACKETCLOSE
   47       | MINUS Factor
   48       | FLOAT_VAL
   49       | INT_VAL
   50       | bool_var

   51 for: FOR BRACKETOPEN forfirst SEMICOL expr SEMICOL forfirst BRACKETCLOSE

   52 while_stmt: WHILE BRACKETOPEN expr BRACKETCLOSE

   53 forfirst: ID ASSIGN expr
   54         | INT ID ASSIGN expr

   55 switch: SWITCH BRACKETOPEN ID BRACKETCLOSE BRACEOPEN switchstmt

   56 switchstmt: CASE values COLON stmt_list switchstmt
   57           | BRACECLOSE

   58 stmt_list: stmt
   59          | stmt_list stmt

   60 values: INT_VAL
   61       | FLOAT_VAL
   62       | bool_var
   63       | C_VAL


Terminals, with rules where they appear

$end (0) 0
error (256)
FLOAT_VAL (258) 48 61
C_VAL (259) 3 4 5 63
INT_VAL (260) 49 60
bool_var (261) 50 62
INT (262) 7 8 22 54
CHAR (263) 3 4 24
FLOAT (264) 9 10 23
BOOL (265) 11 12 25
CONST (266) 4 8 10 12
ID (267) 3 4 5 6 7 8 9 10 11 12 22 23 24 25 45 53 54 55
ASSIGN (268) 3 4 5 6 7 8 9 10 11 12 53 54
NOTEQUAL (269) 40
LT (270) 38
LTEQ (271) 37
GT (272) 36
GTEQ (273) 35
EQUAL (274) 39
XNOR (275) 34
NAND (276) 33
OR (277) 32
XOR (278) 30
NOR (279) 31
NOT (280) 29
AND (281) 28
MINUS (282) 27 47
PLUS (283) 26
DIVIDED (284) 43
MUL (285) 42
IFX (286)
ELSE (287) 18
IF (288) 17 18
WHILE (289) 52
DOWHILE (290) 14
FOR (291) 51
CASE (292) 56
SWITCH (293) 55
BREAK (294)
TRUE (295)
FALSE (296)
C_NOT (297)
C_OR (298)
C_AND (299)
BRACEOPEN (300) 19 20 55
BRACECLOSE (301) 19 20 57
BRACKETOPEN (302) 17 18 46 51 52 55
BRACKETCLOSE (303) 17 18 46 51 52 55
SEMICOL (304) 2 3 4 5 6 7 8 9 10 11 12 21 22 23 24 25 51
COLON (305) 56


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
start (52)
    on left: 1, on right: 0
stmt (53)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21, on right:
    1 13 14 16 17 18 58 59
expr2 (54)
    on left: 22 23 24 25, on right: 2
expr (55)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41, on right:
    6 7 8 9 10 11 12 17 18 26 27 28 30 31 32 33 34 35 36 37 38 39 40
    46 51 52 53 54
Term (56)
    on left: 42 43 44, on right: 26 27 28 29 30 31 32 33 34 35 36 37
    38 39 40 41 42 43
Factor (57)
    on left: 45 46 47 48 49 50, on right: 42 43 44 47
for (58)
    on left: 51, on right: 16
while_stmt (59)
    on left: 52, on right: 13 14
forfirst (60)
    on left: 53 54, on right: 51
switch (61)
    on left: 55, on right: 15
switchstmt (62)
    on left: 56 57, on right: 55 56
stmt_list (63)
    on left: 58 59, on right: 19 56 59
values (64)
    on left: 60 61 62 63, on right: 56


state 0

    0 $accept: . start $end

    INT        shift, and go to state 1
    CHAR       shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    CONST      shift, and go to state 5
    ID         shift, and go to state 6
    IF         shift, and go to state 7
    WHILE      shift, and go to state 8
    DOWHILE    shift, and go to state 9
    FOR        shift, and go to state 10
    SWITCH     shift, and go to state 11
    BRACEOPEN  shift, and go to state 12
    SEMICOL    shift, and go to state 13

    start       go to state 14
    stmt        go to state 15
    expr2       go to state 16
    for         go to state 17
    while_stmt  go to state 18
    switch      go to state 19


state 1

    7 stmt: INT . ID ASSIGN expr SEMICOL
   22 expr2: INT . ID SEMICOL

    ID  shift, and go to state 20


state 2

    3 stmt: CHAR . ID ASSIGN C_VAL SEMICOL
   24 expr2: CHAR . ID SEMICOL

    ID  shift, and go to state 21


state 3

    9 stmt: FLOAT . ID ASSIGN expr SEMICOL
   23 expr2: FLOAT . ID SEMICOL

    ID  shift, and go to state 22


state 4

   11 stmt: BOOL . ID ASSIGN expr SEMICOL
   25 expr2: BOOL . ID SEMICOL

    ID  shift, and go to state 23


state 5

    4 stmt: CONST . CHAR ID ASSIGN C_VAL SEMICOL
    8     | CONST . INT ID ASSIGN expr SEMICOL
   10     | CONST . FLOAT ID ASSIGN expr SEMICOL
   12     | CONST . BOOL ID ASSIGN expr SEMICOL

    INT    shift, and go to state 24
    CHAR   shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27


state 6

    5 stmt: ID . ASSIGN C_VAL SEMICOL
    6     | ID . ASSIGN expr SEMICOL

    ASSIGN  shift, and go to state 28


state 7

   17 stmt: IF . BRACKETOPEN expr BRACKETCLOSE stmt
   18     | IF . BRACKETOPEN expr BRACKETCLOSE stmt ELSE stmt

    BRACKETOPEN  shift, and go to state 29


state 8

   52 while_stmt: WHILE . BRACKETOPEN expr BRACKETCLOSE

    BRACKETOPEN  shift, and go to state 30


state 9

   14 stmt: DOWHILE . stmt while_stmt

    INT        shift, and go to state 1
    CHAR       shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    CONST      shift, and go to state 5
    ID         shift, and go to state 6
    IF         shift, and go to state 7
    WHILE      shift, and go to state 8
    DOWHILE    shift, and go to state 9
    FOR        shift, and go to state 10
    SWITCH     shift, and go to state 11
    BRACEOPEN  shift, and go to state 12
    SEMICOL    shift, and go to state 13

    stmt        go to state 31
    expr2       go to state 16
    for         go to state 17
    while_stmt  go to state 18
    switch      go to state 19


state 10

   51 for: FOR . BRACKETOPEN forfirst SEMICOL expr SEMICOL forfirst BRACKETCLOSE

    BRACKETOPEN  shift, and go to state 32


state 11

   55 switch: SWITCH . BRACKETOPEN ID BRACKETCLOSE BRACEOPEN switchstmt

    BRACKETOPEN  shift, and go to state 33


state 12

   19 stmt: BRACEOPEN . stmt_list BRACECLOSE
   20     | BRACEOPEN . BRACECLOSE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    CONST       shift, and go to state 5
    ID          shift, and go to state 6
    IF          shift, and go to state 7
    WHILE       shift, and go to state 8
    DOWHILE     shift, and go to state 9
    FOR         shift, and go to state 10
    SWITCH      shift, and go to state 11
    BRACEOPEN   shift, and go to state 12
    BRACECLOSE  shift, and go to state 34
    SEMICOL     shift, and go to state 13

    stmt        go to state 35
    expr2       go to state 16
    for         go to state 17
    while_stmt  go to state 18
    switch      go to state 19
    stmt_list   go to state 36


state 13

   21 stmt: SEMICOL .

    $default  reduce using rule 21 (stmt)


state 14

    0 $accept: start . $end

    $end  shift, and go to state 37


state 15

    1 start: stmt .

    $default  reduce using rule 1 (start)


state 16

    2 stmt: expr2 . SEMICOL

    SEMICOL  shift, and go to state 38


state 17

   16 stmt: for . stmt

    INT        shift, and go to state 1
    CHAR       shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    CONST      shift, and go to state 5
    ID         shift, and go to state 6
    IF         shift, and go to state 7
    WHILE      shift, and go to state 8
    DOWHILE    shift, and go to state 9
    FOR        shift, and go to state 10
    SWITCH     shift, and go to state 11
    BRACEOPEN  shift, and go to state 12
    SEMICOL    shift, and go to state 13

    stmt        go to state 39
    expr2       go to state 16
    for         go to state 17
    while_stmt  go to state 18
    switch      go to state 19


state 18

   13 stmt: while_stmt . stmt

    INT        shift, and go to state 1
    CHAR       shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    CONST      shift, and go to state 5
    ID         shift, and go to state 6
    IF         shift, and go to state 7
    WHILE      shift, and go to state 8
    DOWHILE    shift, and go to state 9
    FOR        shift, and go to state 10
    SWITCH     shift, and go to state 11
    BRACEOPEN  shift, and go to state 12
    SEMICOL    shift, and go to state 13

    stmt        go to state 40
    expr2       go to state 16
    for         go to state 17
    while_stmt  go to state 18
    switch      go to state 19


state 19

   15 stmt: switch .

    $default  reduce using rule 15 (stmt)


state 20

    7 stmt: INT ID . ASSIGN expr SEMICOL
   22 expr2: INT ID . SEMICOL

    ASSIGN   shift, and go to state 41
    SEMICOL  shift, and go to state 42


state 21

    3 stmt: CHAR ID . ASSIGN C_VAL SEMICOL
   24 expr2: CHAR ID . SEMICOL

    ASSIGN   shift, and go to state 43
    SEMICOL  shift, and go to state 44


state 22

    9 stmt: FLOAT ID . ASSIGN expr SEMICOL
   23 expr2: FLOAT ID . SEMICOL

    ASSIGN   shift, and go to state 45
    SEMICOL  shift, and go to state 46


state 23

   11 stmt: BOOL ID . ASSIGN expr SEMICOL
   25 expr2: BOOL ID . SEMICOL

    ASSIGN   shift, and go to state 47
    SEMICOL  shift, and go to state 48


state 24

    8 stmt: CONST INT . ID ASSIGN expr SEMICOL

    ID  shift, and go to state 49


state 25

    4 stmt: CONST CHAR . ID ASSIGN C_VAL SEMICOL

    ID  shift, and go to state 50


state 26

   10 stmt: CONST FLOAT . ID ASSIGN expr SEMICOL

    ID  shift, and go to state 51


state 27

   12 stmt: CONST BOOL . ID ASSIGN expr SEMICOL

    ID  shift, and go to state 52


state 28

    5 stmt: ID ASSIGN . C_VAL SEMICOL
    6     | ID ASSIGN . expr SEMICOL

    FLOAT_VAL    shift, and go to state 53
    C_VAL        shift, and go to state 54
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 61
    Term    go to state 62
    Factor  go to state 63


state 29

   17 stmt: IF BRACKETOPEN . expr BRACKETCLOSE stmt
   18     | IF BRACKETOPEN . expr BRACKETCLOSE stmt ELSE stmt

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 64
    Term    go to state 62
    Factor  go to state 63


state 30

   52 while_stmt: WHILE BRACKETOPEN . expr BRACKETCLOSE

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 65
    Term    go to state 62
    Factor  go to state 63


state 31

   14 stmt: DOWHILE stmt . while_stmt

    WHILE  shift, and go to state 8

    while_stmt  go to state 66


state 32

   51 for: FOR BRACKETOPEN . forfirst SEMICOL expr SEMICOL forfirst BRACKETCLOSE

    INT  shift, and go to state 67
    ID   shift, and go to state 68

    forfirst  go to state 69


state 33

   55 switch: SWITCH BRACKETOPEN . ID BRACKETCLOSE BRACEOPEN switchstmt

    ID  shift, and go to state 70


state 34

   20 stmt: BRACEOPEN BRACECLOSE .

    $default  reduce using rule 20 (stmt)


state 35

   58 stmt_list: stmt .

    $default  reduce using rule 58 (stmt_list)


state 36

   19 stmt: BRACEOPEN stmt_list . BRACECLOSE
   59 stmt_list: stmt_list . stmt

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    CONST       shift, and go to state 5
    ID          shift, and go to state 6
    IF          shift, and go to state 7
    WHILE       shift, and go to state 8
    DOWHILE     shift, and go to state 9
    FOR         shift, and go to state 10
    SWITCH      shift, and go to state 11
    BRACEOPEN   shift, and go to state 12
    BRACECLOSE  shift, and go to state 71
    SEMICOL     shift, and go to state 13

    stmt        go to state 72
    expr2       go to state 16
    for         go to state 17
    while_stmt  go to state 18
    switch      go to state 19


state 37

    0 $accept: start $end .

    $default  accept


state 38

    2 stmt: expr2 SEMICOL .

    $default  reduce using rule 2 (stmt)


state 39

   16 stmt: for stmt .

    $default  reduce using rule 16 (stmt)


state 40

   13 stmt: while_stmt stmt .

    $default  reduce using rule 13 (stmt)


state 41

    7 stmt: INT ID ASSIGN . expr SEMICOL

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 73
    Term    go to state 62
    Factor  go to state 63


state 42

   22 expr2: INT ID SEMICOL .

    $default  reduce using rule 22 (expr2)


state 43

    3 stmt: CHAR ID ASSIGN . C_VAL SEMICOL

    C_VAL  shift, and go to state 74


state 44

   24 expr2: CHAR ID SEMICOL .

    $default  reduce using rule 24 (expr2)


state 45

    9 stmt: FLOAT ID ASSIGN . expr SEMICOL

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 75
    Term    go to state 62
    Factor  go to state 63


state 46

   23 expr2: FLOAT ID SEMICOL .

    $default  reduce using rule 23 (expr2)


state 47

   11 stmt: BOOL ID ASSIGN . expr SEMICOL

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 76
    Term    go to state 62
    Factor  go to state 63


state 48

   25 expr2: BOOL ID SEMICOL .

    $default  reduce using rule 25 (expr2)


state 49

    8 stmt: CONST INT ID . ASSIGN expr SEMICOL

    ASSIGN  shift, and go to state 77


state 50

    4 stmt: CONST CHAR ID . ASSIGN C_VAL SEMICOL

    ASSIGN  shift, and go to state 78


state 51

   10 stmt: CONST FLOAT ID . ASSIGN expr SEMICOL

    ASSIGN  shift, and go to state 79


state 52

   12 stmt: CONST BOOL ID . ASSIGN expr SEMICOL

    ASSIGN  shift, and go to state 80


state 53

   48 Factor: FLOAT_VAL .

    $default  reduce using rule 48 (Factor)


state 54

    5 stmt: ID ASSIGN C_VAL . SEMICOL

    SEMICOL  shift, and go to state 81


state 55

   49 Factor: INT_VAL .

    $default  reduce using rule 49 (Factor)


state 56

   50 Factor: bool_var .

    $default  reduce using rule 50 (Factor)


state 57

   45 Factor: ID .

    $default  reduce using rule 45 (Factor)


state 58

   29 expr: NOT . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 82
    Factor  go to state 63


state 59

   47 Factor: MINUS . Factor

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Factor  go to state 83


state 60

   46 Factor: BRACKETOPEN . expr BRACKETCLOSE

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 84
    Term    go to state 62
    Factor  go to state 63


state 61

    6 stmt: ID ASSIGN expr . SEMICOL
   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term

    NOTEQUAL  shift, and go to state 85
    LT        shift, and go to state 86
    LTEQ      shift, and go to state 87
    GT        shift, and go to state 88
    GTEQ      shift, and go to state 89
    EQUAL     shift, and go to state 90
    XNOR      shift, and go to state 91
    NAND      shift, and go to state 92
    OR        shift, and go to state 93
    XOR       shift, and go to state 94
    NOR       shift, and go to state 95
    AND       shift, and go to state 96
    MINUS     shift, and go to state 97
    PLUS      shift, and go to state 98
    SEMICOL   shift, and go to state 99


state 62

   41 expr: Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 41 (expr)


state 63

   44 Term: Factor .

    $default  reduce using rule 44 (Term)


state 64

   17 stmt: IF BRACKETOPEN expr . BRACKETCLOSE stmt
   18     | IF BRACKETOPEN expr . BRACKETCLOSE stmt ELSE stmt
   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term

    NOTEQUAL      shift, and go to state 85
    LT            shift, and go to state 86
    LTEQ          shift, and go to state 87
    GT            shift, and go to state 88
    GTEQ          shift, and go to state 89
    EQUAL         shift, and go to state 90
    XNOR          shift, and go to state 91
    NAND          shift, and go to state 92
    OR            shift, and go to state 93
    XOR           shift, and go to state 94
    NOR           shift, and go to state 95
    AND           shift, and go to state 96
    MINUS         shift, and go to state 97
    PLUS          shift, and go to state 98
    BRACKETCLOSE  shift, and go to state 102


state 65

   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term
   52 while_stmt: WHILE BRACKETOPEN expr . BRACKETCLOSE

    NOTEQUAL      shift, and go to state 85
    LT            shift, and go to state 86
    LTEQ          shift, and go to state 87
    GT            shift, and go to state 88
    GTEQ          shift, and go to state 89
    EQUAL         shift, and go to state 90
    XNOR          shift, and go to state 91
    NAND          shift, and go to state 92
    OR            shift, and go to state 93
    XOR           shift, and go to state 94
    NOR           shift, and go to state 95
    AND           shift, and go to state 96
    MINUS         shift, and go to state 97
    PLUS          shift, and go to state 98
    BRACKETCLOSE  shift, and go to state 103


state 66

   14 stmt: DOWHILE stmt while_stmt .

    $default  reduce using rule 14 (stmt)


state 67

   54 forfirst: INT . ID ASSIGN expr

    ID  shift, and go to state 104


state 68

   53 forfirst: ID . ASSIGN expr

    ASSIGN  shift, and go to state 105


state 69

   51 for: FOR BRACKETOPEN forfirst . SEMICOL expr SEMICOL forfirst BRACKETCLOSE

    SEMICOL  shift, and go to state 106


state 70

   55 switch: SWITCH BRACKETOPEN ID . BRACKETCLOSE BRACEOPEN switchstmt

    BRACKETCLOSE  shift, and go to state 107


state 71

   19 stmt: BRACEOPEN stmt_list BRACECLOSE .

    $default  reduce using rule 19 (stmt)


state 72

   59 stmt_list: stmt_list stmt .

    $default  reduce using rule 59 (stmt_list)


state 73

    7 stmt: INT ID ASSIGN expr . SEMICOL
   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term

    NOTEQUAL  shift, and go to state 85
    LT        shift, and go to state 86
    LTEQ      shift, and go to state 87
    GT        shift, and go to state 88
    GTEQ      shift, and go to state 89
    EQUAL     shift, and go to state 90
    XNOR      shift, and go to state 91
    NAND      shift, and go to state 92
    OR        shift, and go to state 93
    XOR       shift, and go to state 94
    NOR       shift, and go to state 95
    AND       shift, and go to state 96
    MINUS     shift, and go to state 97
    PLUS      shift, and go to state 98
    SEMICOL   shift, and go to state 108


state 74

    3 stmt: CHAR ID ASSIGN C_VAL . SEMICOL

    SEMICOL  shift, and go to state 109


state 75

    9 stmt: FLOAT ID ASSIGN expr . SEMICOL
   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term

    NOTEQUAL  shift, and go to state 85
    LT        shift, and go to state 86
    LTEQ      shift, and go to state 87
    GT        shift, and go to state 88
    GTEQ      shift, and go to state 89
    EQUAL     shift, and go to state 90
    XNOR      shift, and go to state 91
    NAND      shift, and go to state 92
    OR        shift, and go to state 93
    XOR       shift, and go to state 94
    NOR       shift, and go to state 95
    AND       shift, and go to state 96
    MINUS     shift, and go to state 97
    PLUS      shift, and go to state 98
    SEMICOL   shift, and go to state 110


state 76

   11 stmt: BOOL ID ASSIGN expr . SEMICOL
   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term

    NOTEQUAL  shift, and go to state 85
    LT        shift, and go to state 86
    LTEQ      shift, and go to state 87
    GT        shift, and go to state 88
    GTEQ      shift, and go to state 89
    EQUAL     shift, and go to state 90
    XNOR      shift, and go to state 91
    NAND      shift, and go to state 92
    OR        shift, and go to state 93
    XOR       shift, and go to state 94
    NOR       shift, and go to state 95
    AND       shift, and go to state 96
    MINUS     shift, and go to state 97
    PLUS      shift, and go to state 98
    SEMICOL   shift, and go to state 111


state 77

    8 stmt: CONST INT ID ASSIGN . expr SEMICOL

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 112
    Term    go to state 62
    Factor  go to state 63


state 78

    4 stmt: CONST CHAR ID ASSIGN . C_VAL SEMICOL

    C_VAL  shift, and go to state 113


state 79

   10 stmt: CONST FLOAT ID ASSIGN . expr SEMICOL

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 114
    Term    go to state 62
    Factor  go to state 63


state 80

   12 stmt: CONST BOOL ID ASSIGN . expr SEMICOL

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 115
    Term    go to state 62
    Factor  go to state 63


state 81

    5 stmt: ID ASSIGN C_VAL SEMICOL .

    $default  reduce using rule 5 (stmt)


state 82

   29 expr: NOT Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 29 (expr)


state 83

   47 Factor: MINUS Factor .

    $default  reduce using rule 47 (Factor)


state 84

   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term
   46 Factor: BRACKETOPEN expr . BRACKETCLOSE

    NOTEQUAL      shift, and go to state 85
    LT            shift, and go to state 86
    LTEQ          shift, and go to state 87
    GT            shift, and go to state 88
    GTEQ          shift, and go to state 89
    EQUAL         shift, and go to state 90
    XNOR          shift, and go to state 91
    NAND          shift, and go to state 92
    OR            shift, and go to state 93
    XOR           shift, and go to state 94
    NOR           shift, and go to state 95
    AND           shift, and go to state 96
    MINUS         shift, and go to state 97
    PLUS          shift, and go to state 98
    BRACKETCLOSE  shift, and go to state 116


state 85

   40 expr: expr NOTEQUAL . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 117
    Factor  go to state 63


state 86

   38 expr: expr LT . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 118
    Factor  go to state 63


state 87

   37 expr: expr LTEQ . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 119
    Factor  go to state 63


state 88

   36 expr: expr GT . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 120
    Factor  go to state 63


state 89

   35 expr: expr GTEQ . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 121
    Factor  go to state 63


state 90

   39 expr: expr EQUAL . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 122
    Factor  go to state 63


state 91

   34 expr: expr XNOR . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 123
    Factor  go to state 63


state 92

   33 expr: expr NAND . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 124
    Factor  go to state 63


state 93

   32 expr: expr OR . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 125
    Factor  go to state 63


state 94

   30 expr: expr XOR . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 126
    Factor  go to state 63


state 95

   31 expr: expr NOR . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 127
    Factor  go to state 63


state 96

   28 expr: expr AND . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 128
    Factor  go to state 63


state 97

   27 expr: expr MINUS . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 129
    Factor  go to state 63


state 98

   26 expr: expr PLUS . Term

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Term    go to state 130
    Factor  go to state 63


state 99

    6 stmt: ID ASSIGN expr SEMICOL .

    $default  reduce using rule 6 (stmt)


state 100

   43 Term: Term DIVIDED . Factor

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Factor  go to state 131


state 101

   42 Term: Term MUL . Factor

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    Factor  go to state 132


state 102

   17 stmt: IF BRACKETOPEN expr BRACKETCLOSE . stmt
   18     | IF BRACKETOPEN expr BRACKETCLOSE . stmt ELSE stmt

    INT        shift, and go to state 1
    CHAR       shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    CONST      shift, and go to state 5
    ID         shift, and go to state 6
    IF         shift, and go to state 7
    WHILE      shift, and go to state 8
    DOWHILE    shift, and go to state 9
    FOR        shift, and go to state 10
    SWITCH     shift, and go to state 11
    BRACEOPEN  shift, and go to state 12
    SEMICOL    shift, and go to state 13

    stmt        go to state 133
    expr2       go to state 16
    for         go to state 17
    while_stmt  go to state 18
    switch      go to state 19


state 103

   52 while_stmt: WHILE BRACKETOPEN expr BRACKETCLOSE .

    $default  reduce using rule 52 (while_stmt)


state 104

   54 forfirst: INT ID . ASSIGN expr

    ASSIGN  shift, and go to state 134


state 105

   53 forfirst: ID ASSIGN . expr

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 135
    Term    go to state 62
    Factor  go to state 63


state 106

   51 for: FOR BRACKETOPEN forfirst SEMICOL . expr SEMICOL forfirst BRACKETCLOSE

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 136
    Term    go to state 62
    Factor  go to state 63


state 107

   55 switch: SWITCH BRACKETOPEN ID BRACKETCLOSE . BRACEOPEN switchstmt

    BRACEOPEN  shift, and go to state 137


state 108

    7 stmt: INT ID ASSIGN expr SEMICOL .

    $default  reduce using rule 7 (stmt)


state 109

    3 stmt: CHAR ID ASSIGN C_VAL SEMICOL .

    $default  reduce using rule 3 (stmt)


state 110

    9 stmt: FLOAT ID ASSIGN expr SEMICOL .

    $default  reduce using rule 9 (stmt)


state 111

   11 stmt: BOOL ID ASSIGN expr SEMICOL .

    $default  reduce using rule 11 (stmt)


state 112

    8 stmt: CONST INT ID ASSIGN expr . SEMICOL
   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term

    NOTEQUAL  shift, and go to state 85
    LT        shift, and go to state 86
    LTEQ      shift, and go to state 87
    GT        shift, and go to state 88
    GTEQ      shift, and go to state 89
    EQUAL     shift, and go to state 90
    XNOR      shift, and go to state 91
    NAND      shift, and go to state 92
    OR        shift, and go to state 93
    XOR       shift, and go to state 94
    NOR       shift, and go to state 95
    AND       shift, and go to state 96
    MINUS     shift, and go to state 97
    PLUS      shift, and go to state 98
    SEMICOL   shift, and go to state 138


state 113

    4 stmt: CONST CHAR ID ASSIGN C_VAL . SEMICOL

    SEMICOL  shift, and go to state 139


state 114

   10 stmt: CONST FLOAT ID ASSIGN expr . SEMICOL
   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term

    NOTEQUAL  shift, and go to state 85
    LT        shift, and go to state 86
    LTEQ      shift, and go to state 87
    GT        shift, and go to state 88
    GTEQ      shift, and go to state 89
    EQUAL     shift, and go to state 90
    XNOR      shift, and go to state 91
    NAND      shift, and go to state 92
    OR        shift, and go to state 93
    XOR       shift, and go to state 94
    NOR       shift, and go to state 95
    AND       shift, and go to state 96
    MINUS     shift, and go to state 97
    PLUS      shift, and go to state 98
    SEMICOL   shift, and go to state 140


state 115

   12 stmt: CONST BOOL ID ASSIGN expr . SEMICOL
   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term

    NOTEQUAL  shift, and go to state 85
    LT        shift, and go to state 86
    LTEQ      shift, and go to state 87
    GT        shift, and go to state 88
    GTEQ      shift, and go to state 89
    EQUAL     shift, and go to state 90
    XNOR      shift, and go to state 91
    NAND      shift, and go to state 92
    OR        shift, and go to state 93
    XOR       shift, and go to state 94
    NOR       shift, and go to state 95
    AND       shift, and go to state 96
    MINUS     shift, and go to state 97
    PLUS      shift, and go to state 98
    SEMICOL   shift, and go to state 141


state 116

   46 Factor: BRACKETOPEN expr BRACKETCLOSE .

    $default  reduce using rule 46 (Factor)


state 117

   40 expr: expr NOTEQUAL Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 40 (expr)


state 118

   38 expr: expr LT Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 38 (expr)


state 119

   37 expr: expr LTEQ Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 37 (expr)


state 120

   36 expr: expr GT Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 36 (expr)


state 121

   35 expr: expr GTEQ Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 35 (expr)


state 122

   39 expr: expr EQUAL Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 39 (expr)


state 123

   34 expr: expr XNOR Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 34 (expr)


state 124

   33 expr: expr NAND Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 33 (expr)


state 125

   32 expr: expr OR Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 32 (expr)


state 126

   30 expr: expr XOR Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 30 (expr)


state 127

   31 expr: expr NOR Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 31 (expr)


state 128

   28 expr: expr AND Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 28 (expr)


state 129

   27 expr: expr MINUS Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 27 (expr)


state 130

   26 expr: expr PLUS Term .
   42 Term: Term . MUL Factor
   43     | Term . DIVIDED Factor

    DIVIDED  shift, and go to state 100
    MUL      shift, and go to state 101

    $default  reduce using rule 26 (expr)


state 131

   43 Term: Term DIVIDED Factor .

    $default  reduce using rule 43 (Term)


state 132

   42 Term: Term MUL Factor .

    $default  reduce using rule 42 (Term)


state 133

   17 stmt: IF BRACKETOPEN expr BRACKETCLOSE stmt .
   18     | IF BRACKETOPEN expr BRACKETCLOSE stmt . ELSE stmt

    ELSE  shift, and go to state 142

    $default  reduce using rule 17 (stmt)


state 134

   54 forfirst: INT ID ASSIGN . expr

    FLOAT_VAL    shift, and go to state 53
    INT_VAL      shift, and go to state 55
    bool_var     shift, and go to state 56
    ID           shift, and go to state 57
    NOT          shift, and go to state 58
    MINUS        shift, and go to state 59
    BRACKETOPEN  shift, and go to state 60

    expr    go to state 143
    Term    go to state 62
    Factor  go to state 63


state 135

   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term
   53 forfirst: ID ASSIGN expr .

    NOTEQUAL  shift, and go to state 85
    LT        shift, and go to state 86
    LTEQ      shift, and go to state 87
    GT        shift, and go to state 88
    GTEQ      shift, and go to state 89
    EQUAL     shift, and go to state 90
    XNOR      shift, and go to state 91
    NAND      shift, and go to state 92
    OR        shift, and go to state 93
    XOR       shift, and go to state 94
    NOR       shift, and go to state 95
    AND       shift, and go to state 96
    MINUS     shift, and go to state 97
    PLUS      shift, and go to state 98

    $default  reduce using rule 53 (forfirst)


state 136

   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term
   51 for: FOR BRACKETOPEN forfirst SEMICOL expr . SEMICOL forfirst BRACKETCLOSE

    NOTEQUAL  shift, and go to state 85
    LT        shift, and go to state 86
    LTEQ      shift, and go to state 87
    GT        shift, and go to state 88
    GTEQ      shift, and go to state 89
    EQUAL     shift, and go to state 90
    XNOR      shift, and go to state 91
    NAND      shift, and go to state 92
    OR        shift, and go to state 93
    XOR       shift, and go to state 94
    NOR       shift, and go to state 95
    AND       shift, and go to state 96
    MINUS     shift, and go to state 97
    PLUS      shift, and go to state 98
    SEMICOL   shift, and go to state 144


state 137

   55 switch: SWITCH BRACKETOPEN ID BRACKETCLOSE BRACEOPEN . switchstmt

    CASE        shift, and go to state 145
    BRACECLOSE  shift, and go to state 146

    switchstmt  go to state 147


state 138

    8 stmt: CONST INT ID ASSIGN expr SEMICOL .

    $default  reduce using rule 8 (stmt)


state 139

    4 stmt: CONST CHAR ID ASSIGN C_VAL SEMICOL .

    $default  reduce using rule 4 (stmt)


state 140

   10 stmt: CONST FLOAT ID ASSIGN expr SEMICOL .

    $default  reduce using rule 10 (stmt)


state 141

   12 stmt: CONST BOOL ID ASSIGN expr SEMICOL .

    $default  reduce using rule 12 (stmt)


state 142

   18 stmt: IF BRACKETOPEN expr BRACKETCLOSE stmt ELSE . stmt

    INT        shift, and go to state 1
    CHAR       shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    CONST      shift, and go to state 5
    ID         shift, and go to state 6
    IF         shift, and go to state 7
    WHILE      shift, and go to state 8
    DOWHILE    shift, and go to state 9
    FOR        shift, and go to state 10
    SWITCH     shift, and go to state 11
    BRACEOPEN  shift, and go to state 12
    SEMICOL    shift, and go to state 13

    stmt        go to state 148
    expr2       go to state 16
    for         go to state 17
    while_stmt  go to state 18
    switch      go to state 19


state 143

   26 expr: expr . PLUS Term
   27     | expr . MINUS Term
   28     | expr . AND Term
   30     | expr . XOR Term
   31     | expr . NOR Term
   32     | expr . OR Term
   33     | expr . NAND Term
   34     | expr . XNOR Term
   35     | expr . GTEQ Term
   36     | expr . GT Term
   37     | expr . LTEQ Term
   38     | expr . LT Term
   39     | expr . EQUAL Term
   40     | expr . NOTEQUAL Term
   54 forfirst: INT ID ASSIGN expr .

    NOTEQUAL  shift, and go to state 85
    LT        shift, and go to state 86
    LTEQ      shift, and go to state 87
    GT        shift, and go to state 88
    GTEQ      shift, and go to state 89
    EQUAL     shift, and go to state 90
    XNOR      shift, and go to state 91
    NAND      shift, and go to state 92
    OR        shift, and go to state 93
    XOR       shift, and go to state 94
    NOR       shift, and go to state 95
    AND       shift, and go to state 96
    MINUS     shift, and go to state 97
    PLUS      shift, and go to state 98

    $default  reduce using rule 54 (forfirst)


state 144

   51 for: FOR BRACKETOPEN forfirst SEMICOL expr SEMICOL . forfirst BRACKETCLOSE

    INT  shift, and go to state 67
    ID   shift, and go to state 68

    forfirst  go to state 149


state 145

   56 switchstmt: CASE . values COLON stmt_list switchstmt

    FLOAT_VAL  shift, and go to state 150
    C_VAL      shift, and go to state 151
    INT_VAL    shift, and go to state 152
    bool_var   shift, and go to state 153

    values  go to state 154


state 146

   57 switchstmt: BRACECLOSE .

    $default  reduce using rule 57 (switchstmt)


state 147

   55 switch: SWITCH BRACKETOPEN ID BRACKETCLOSE BRACEOPEN switchstmt .

    $default  reduce using rule 55 (switch)


state 148

   18 stmt: IF BRACKETOPEN expr BRACKETCLOSE stmt ELSE stmt .

    $default  reduce using rule 18 (stmt)


state 149

   51 for: FOR BRACKETOPEN forfirst SEMICOL expr SEMICOL forfirst . BRACKETCLOSE

    BRACKETCLOSE  shift, and go to state 155


state 150

   61 values: FLOAT_VAL .

    $default  reduce using rule 61 (values)


state 151

   63 values: C_VAL .

    $default  reduce using rule 63 (values)


state 152

   60 values: INT_VAL .

    $default  reduce using rule 60 (values)


state 153

   62 values: bool_var .

    $default  reduce using rule 62 (values)


state 154

   56 switchstmt: CASE values . COLON stmt_list switchstmt

    COLON  shift, and go to state 156


state 155

   51 for: FOR BRACKETOPEN forfirst SEMICOL expr SEMICOL forfirst BRACKETCLOSE .

    $default  reduce using rule 51 (for)


state 156

   56 switchstmt: CASE values COLON . stmt_list switchstmt

    INT        shift, and go to state 1
    CHAR       shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    CONST      shift, and go to state 5
    ID         shift, and go to state 6
    IF         shift, and go to state 7
    WHILE      shift, and go to state 8
    DOWHILE    shift, and go to state 9
    FOR        shift, and go to state 10
    SWITCH     shift, and go to state 11
    BRACEOPEN  shift, and go to state 12
    SEMICOL    shift, and go to state 13

    stmt        go to state 35
    expr2       go to state 16
    for         go to state 17
    while_stmt  go to state 18
    switch      go to state 19
    stmt_list   go to state 157


state 157

   56 switchstmt: CASE values COLON stmt_list . switchstmt
   59 stmt_list: stmt_list . stmt

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    CONST       shift, and go to state 5
    ID          shift, and go to state 6
    IF          shift, and go to state 7
    WHILE       shift, and go to state 8
    DOWHILE     shift, and go to state 9
    FOR         shift, and go to state 10
    CASE        shift, and go to state 145
    SWITCH      shift, and go to state 11
    BRACEOPEN   shift, and go to state 12
    BRACECLOSE  shift, and go to state 146
    SEMICOL     shift, and go to state 13

    stmt        go to state 72
    expr2       go to state 16
    for         go to state 17
    while_stmt  go to state 18
    switch      go to state 19
    switchstmt  go to state 158


state 158

   56 switchstmt: CASE values COLON stmt_list switchstmt .

    $default  reduce using rule 56 (switchstmt)
